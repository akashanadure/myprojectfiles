4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 1/10
In
[1]:
In
[2]:
In
[3]:
Out[3]:
show_id
type
title
director
country
date_added
release_year
rating
duration
0
s1
Movie
DickJohnson IsDead
KirstenJohnson
UnitedStates
9/25/2021
2020
PG-13
90 min
Docum
1
s3
TVShow
Ganglands
JulienLeclercq
France
9/24/2021
2021
TV-MA
1Season
InteTV S
2
s6
TVShow
MidnightMass
MikeFlanagan
UnitedStates
9/24/2021
2021
TV-MA
1Season
TVTV H
3
s14
Movie
Confessionsof anInvisible Girl
BrunoGarotti
Brazil
9/22/2021
2021
TV-PG
91 min
CFamilC
4
s8
Movie
Sankofa
HaileGerima
UnitedStates
9/24/2021
1993
TV-MA
125 min
IndInte
import
pandas
as
pd
import
numpy
as
np
import
matplotlib
.
pyplot
as
plt
import
seaborn
as
sns
import
warnings
import
re
import
plotly
.
express
as
px
import
plotly
.
graph_objs
as
go
import
plotly
.
figure_factory
as
ff
warnings
.
filterwarnings
(
'ignore'
)
%
matplotlib
inline
netflix
=
pd
.
read_csv
(
r'C:\Users\DELL\Downloads\netflix1.csv'
)
netflix
.
head
()
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 2/10
In
[4]:
In
[5]:
In
[6]:
Out[4]:
show_id
type
title
director
country
date_added
release_year
rating
duration
liste
8785
s8797
TVShow
YunusEmre
NotGiven
Turkey
1/17/2017
2016
TV-PG
2Seasons
InternatiTV ShoTV Dra
8786
s8798
TVShow
ZakStorm
NotGiven
UnitedStates
9/13/2018
2016
TV-Y7
3Seasons
Kids
8787
s8801
TVShow
ZindagiGulzarHai
NotGiven
Pakistan
12/15/2016
2012
TV-PG
1Season
InternatiTV ShoRomaTV ShoT
8788
s8784
TVShow
Yoko
NotGiven
Pakistan
6/23/2018
2016
TV-Y
1Season
Kids
8789
s8786
TVShow
YOM
NotGiven
Pakistan
6/7/2018
2016
TV-Y7
1Season
Kids
Out[5]:
(8790, 10)
Out[6]:
show_id 0type 0title 0director 0country 0date_added 0release_year 0rating 0duration 0listed_in 0dtype: int64
netflix
.
tail
()
netflix
.
shape
netflix
.
isnull
().
sum
()
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 3/10
In
[7]:
In
[8]:
In
[9]:
Inspect Missing values in the dataset
Out[7]:
release_year
count
8790.000000
mean
2014.183163
std
8.825466
min
1925.000000
25%
2013.000000
50%
2017.000000
75%
2019.000000
max
2021.000000
Out[8]:
Index(['show_id', 'type', 'title', 'director', 'country', 'date_added', 'release_year', 'rating', 'duration', 'listed_in'], dtype='object')
<class 'pandas.core.frame.DataFrame'>RangeIndex: 8790 entries, 0 to 8789Data columns (total 10 columns):# Column Non-Null Count Dtype --- ------ -------------- ----- 0 show_id 8790 non-null object1 type 8790 non-null object2 title 8790 non-null object3 director 8790 non-null object4 country 8790 non-null object5 date_added 8790 non-null object6 release_year 8790 non-null int64 7 rating 8790 non-null object8 duration 8790 non-null object9 listed_in 8790 non-null objectdtypes: int64(1), object(9)memory usage: 686.8+ KB
netflix
.
describe
()
netflix
.
columns
netflix
.
info
()
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 4/10
In
[10]:
In
[11]:
In
[12]:
movies vs TV Shows
Out[10]:
listed_in 0duration 0rating 0release_year 0date_added 0country 0director 0title 0type 0show_id 0dtype: int64
Out[11]:
listed_in 0.0duration 0.0rating 0.0release_year 0.0date_added 0.0country 0.0director 0.0title 0.0type 0.0show_id 0.0dtype: float64
Out[12]:
Not Given 2588Rajiv Chilaka 20Alastair Fothergill 18Raúl Campos, Jan Suter 18Marcus Raboy 16 ... Rai Yuvraj Bains 1Todd Standing 1Kees Van Oostrum 1Adam Alleca 1Praveen Nischol 1Name: director, Length: 4528, dtype: int64
netflix
.
isnull
().
sum
().
sort_values
(
ascending
=
False
)
round
(
netflix
.
isnull
().
sum
()
/
netflix
.
shape
[
0
]
*
100
,
2
).
sort_values
(
ascending
=
False
)
netflix
[
"director"
].
value_counts
()
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 5/10
In
[13]:
In
[14]:
30.3%
movies vs TV shows
Out[14]:
Movie 6126TV Show 2664Name: type, dtype: int64
#Checking Gender imbalance
go
.
Figure
(
data
=
[
go
.
Pie
(
labels
=
netflix
.
type
.
value_counts
(
normalize
=
True
).
index
,
values
=
netflix
.
type
.
value_counts
(
normalize
=
True
).
values
,
hole
=
.5
,
title
=
'movies vs TV shows'
)])
netflix
.
type
.
value_counts
()
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 6/10
In
[15]:
In
[16]:
In
[17]:
Out[15]:
TV-MA 3205TV-14 2157TV-PG 861R 799PG-13 490TV-Y7 333TV-Y 306PG 287TV-G 220NR 79G 41TV-Y7-FV 6UR 3NC-17 3Name: rating, dtype: int64
Out[17]:
United States 3240India 1057United Kingdom 638Pakistan 421Not Given 287 ... Paraguay 1Puerto Rico 1Guatemala 1Luxembourg 1Mozambique 1Name: country, Length: 86, dtype: int64
netflix
.
rating
.
value_counts
()
sns
.
barplot
(
x
=
netflix
.
rating
.
value_counts
(),
y
=
netflix
.
rating
.
value_counts
().
index
,
data
=
netfli
plt
.
show
()
netflix
.
country
.
value_counts
()
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 7/10
In
[18]:
year wise count
In
[19]:
Top 10 Directors
Out[18]:
United States 3240India 1057United Kingdom 638Pakistan 421Not Given 287Canada 271Japan 259South Korea 214France 213Spain 182Name: country, dtype: int64
netflix
.
country
.
value_counts
().
head
(
10
)
plt
.
figure
(
figsize
=
(
12
,
10
))
ax
=
sns
.
countplot
(
y
=
"release_year"
,
data
=
netflix
,
order
=
netflix
.
release_year
.
value_counts
().
index
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 8/10
In
[20]:
In
[21]:
In
[22]:
Out[20]:
Not Given 2588Rajiv Chilaka 20Alastair Fothergill 18Raúl Campos, Jan Suter 18Marcus Raboy 16Suhas Kadav 16Jay Karas 14Cathy Garcia-Molina 13Jay Chapman 12Martin Scorsese 12Name: director, dtype: int64
Out[21]:
Dramas, International Movies 362Documentaries 359Stand-Up Comedy 334Comedies, Dramas, International Movies 274Dramas, Independent Movies, International Movies 252Kids' TV 219Children & Family Movies 215Children & Family Movies, Comedies 201Documentaries, International Movies 186Dramas, International Movies, Romantic Movies 180Name: listed_in, dtype: int64
netflix
.
director
.
value_counts
().
head
(
10
)
netflix
.
listed_in
.
value_counts
().
head
(
10
)
plt
.
figure
(
figsize
=
(
12
,
10
))
ax
=
sns
.
countplot
(
y
=
"listed_in"
,
data
=
netflix
,
order
=
netflix
.
listed_in
.
value_counts
().
index
[
0
:
15
]
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 9/10
Handling Missing values
In
[23]:
In
[24]:
In
[25]:
In
[26]:
Out[23]:
listed_in 0.0duration 0.0rating 0.0release_year 0.0date_added 0.0country 0.0director 0.0title 0.0type 0.0show_id 0.0dtype: float64
Out[24]:
show_id 0type 0title 0director 0country 0date_added 0release_year 0rating 0duration 0listed_in 0dtype: int64
Out[26]:
(8790, 10)
round
(
netflix
.
isnull
().
sum
()
/
netflix
.
shape
[
0
]
*
100
,
2
).
sort_values
(
ascending
=
False
)
round
(
netflix
.
isnull
().
sum
())
#dropping rows for small percentages for null
netflix
.
dropna
(
subset
=
[
"rating"
,
"duration"
],
axis
=
0
,
inplace
=
True
)
netflix
.
shape
4/20/23, 2:22 PM Netflix Analysis Dashboard using Python EDA - Jupyter Notebook
localhost:8888/notebooks/Netflix Analysis Dashboard using Python EDA.ipynb 10/10
In
[27]:
In
[28]:
In
[29]:
In
[ ]:
Out[27]:
listed_in 0.0duration 0.0rating 0.0release_year 0.0date_added 0.0country 0.0director 0.0title 0.0type 0.0show_id 0.0dtype: float64
Out[29]:
listed_in 0.0duration 0.0rating 0.0release_year 0.0date_added 0.0country 0.0director 0.0title 0.0type 0.0show_id 0.0dtype: float64
round
(
netflix
.
isnull
().
sum
()
/
netflix
.
shape
[
0
]
*
100
,
2
).
sort_values
(
ascending
=
False
)
netflix
.
dropna
(
subset
=
[
"date_added"
],
axis
=
0
,
inplace
=
True
)
round
(
netflix
.
isnull
().
sum
()
/
netflix
.
shape
[
0
]
*
100
,
2
).
sort_values
(
ascending
=
False
)
